// Code generated by hertz generator.

package demoapi

import (
	"context"
	"easy-note/cmd/api/biz/mw"
	"easy-note/pkg/errno"
	"fmt"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/app/middlewares/server/recovery"
	"github.com/cloudwego/hertz/pkg/common/hlog"
	"github.com/cloudwego/hertz/pkg/common/utils"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/hertz-contrib/requestid"
)

func rootMw() []app.HandlerFunc {
	// your code...
	return []app.HandlerFunc{
		// use recovery middleware
		recovery.Recovery(recovery.WithRecoveryHandler(
			func(ctx context.Context, c *app.RequestContext, err interface{}, stack []byte) {
				hlog.SystemLogger().CtxErrorf(ctx, "[Recovery] err=%v\nstack=%s", err, stack)
				c.JSON(consts.StatusInternalServerError, utils.H{
					"code":    errno.ServiceErr.ErrCode,
					"message": fmt.Sprintf("[Recovery] err=%v\nstack=%s", err, stack),
				})
			},
		)),
		// use requestid middleware
		requestid.New(),
	}
}

func _v2Mw() []app.HandlerFunc {
	// your code...
	return nil
}

func _noteMw() []app.HandlerFunc {
	// your code...
	return []app.HandlerFunc{
		// use jwt middleware
		mw.JwtMiddleware.MiddlewareFunc(),
	}
}

func _updatenoteMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _deletenoteMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _querynoteMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _userMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _createuserMw() []app.HandlerFunc {
	// your code...
	return nil
}
